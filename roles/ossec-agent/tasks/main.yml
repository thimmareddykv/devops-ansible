---
# tasks file for ossec-agent

- name: "Install the correct repository"
  include: "ubuntu.yml"
  when: ansible_os_family == "ubuntu"

- name: "Installing the ossec-agent.conf"
  template: src=var-ossec-etc-ossec-agent.conf.j2
            dest=/var/ossec/etc/ossec-agent.conf
            owner=root
            group=root
            mode=0644
  notify: restart ossec-agent
  tags:
    - init
    - config

- name: "Check if client.keys exists"
  stat: path=/var/ossec/etc/client.keys
  register: check_keys
  tags:
    - config

# When provisioning a lot of agents, the following step may fail
# on the server. So we set ignore_errors to true
- name: "Starting auth daemon on server {{ ossec_server_name }}"
  shell: '/var/ossec/bin/ossec-authd -p 1515 >/dev/null 2>&1 &'
  when: check_keys.stat.exists == false and ossec_server_name|default("") != ""
  delegate_to: "{{ ossec_server_name }}"
  ignore_errors: yes
  tags:
    - config

# - name: 'Please execute the following command on your ossec-server: "/var/ossec/bin/ossec-authd -p 1515 >/dev/null 2>&1 &"'
#  pause: minutes=2
#  when: check_keys.stat.exists == false and ossec_server_name|default("") == "" 

# - name: "register client"
#   shell: /var/ossec/bin/agent-auth -m {{ ossec_server_ip }} -p 1515
#         creates=/var/ossec/etc/client.keys
#  tags:
#    - config

# When provisioning a lot of agents, the following step may fail
# on the server. So we set ignore_errors to true
- name: "kill the auth-daemon on server {{ ossec_server_name }}"
  shell: /usr/bin/pkill -f /var/ossec/bin/ossec-authd
  delegate_to: "{{ ossec_server_name }}"
  when: check_keys.stat.exists == false and ossec_server_name|default("") != ""
  ignore_errors: yes
  tags:
    - config

# - name: 'Please execute the following command on your ossec-server: "/usr/bin/pkill -f /var/ossec/bin/ossec-authd"'
#   pause: minutes=1
#   when: check_keys.stat.exists == false and ossec_server_name|default("") == ""
