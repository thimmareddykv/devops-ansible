---
# file: devops-ansible/ec2-launch-instance.yaml

# Description:
#   Attempt to launch ec2 instances 
#   This file was borrowed from wfm-api team. Thanks.

# Preconditions:
#   export AWS_ACCESS_KEY_ID=
#   export AWS_SECRET_ACCESS_KEY=
#   Require ~/.ssh/wfm-devops-root.pem
#   Top-Secret Bastion ssh config

# Examples:
#
#Test Creation of natserver
# development:nat-tmp
#    ansible-playbook natserver360.yaml -i hosts/natservers.ini --extra-vars "server_name=devops:development:nat-tmp vpc_subnet_id=subnet-ac7cfd87" -vvvv
#
#Existing nat servers
# development:nat
#    ansible-playbook natserver360.yaml -i hosts/local.ini --extra-vars "server_name=devops:development:nat vpc_subnet_id=subnet-ac7cfd87" -vvvv
# shared:nat
#    ansible-playbook natserver360.yaml -i hosts/local.ini --extra-vars "server_name=devops:shared:nat vpc_subnet_id=subnet-d17efffa"
# production:nat
#    ansible-playbook natserver360.yaml -i hosts/local.ini --extra-vars "server_name=devops:production:nat vpc_subnet_id=subnet-997ffeb2"
#
#    ansible-playbook natserver360.yaml -i hosts/natservers.ini

- name: Launch/configure nat server instance {{ server_name }}
  hosts: 127.0.0.1
  connection: local
  gather_facts: false

  vars:
    ansible_distribution: centos
    instance_type: "t2.micro"   
    region: us-east-1
    image: ami-184dc970 # Devops testing for natserver
    
    #aws_group: [allow-bastion, network-nat]
    #vpc_subnet_id: subnet-ced06eb9  # Testing Subnet
    #vpc_subnet_id: subnet-ac7cfd87  # VPC wfm-development vpc-587b533d bastion-b
    #vpc_subnet_id: subnet-d47effff # VPC devops-shared vpc-b37d55d6 bastion-a

  tasks:
    - name: Launch NAT Server
      local_action:
        module: ec2
        vpc_subnet_id: "{{ vpc_subnet_id }}"
        assign_public_ip: yes
        key_name: wfm-devops-root
        group: ['allow-bastion', 'network-nat']
        instance_type: "{{ instance_type }}"
        image: "{{ image }}"
        region: "{{ region }}"
        wait: yes
        wait_timeout: 500
        #exact_count: "{{ instance_count | default(1) }}"
        exact_count: 1
        count_tag:
          Name: "{{ server_name }}"
          #counter_tag: {{ counter_tag }}
          # "wfm:application": "nat"
          # "wfm:environment": "shared"
      register: ec2_instances


    - name: Tag instances
      #when: False
      local_action: ec2_tag
                    resource={{ item.id }}
                    region={{ region }}
                    state=present
      with_items: ec2_instances.tagged_instances
      args:
        tags:
          Name: "{{ server_name }}"
          #counter_tag: "{{ server_name }}"
          role: "nat_server"
          owner: devops
          "wfm:team": devops

    - name: wait for instances to listen on port:22
      when: False
      wait_for: state=started
                host={{ item.private_dns_name }}
                port=22
      with_items: ec2_instances.tagged_instances

    - name: Report instances to user
      #debug: msg="Instance {{ item.id }} with Public IP {{ item.public_ip }}"
      debug: msg="Instance {{ item.id }} with Private IP {{ item.private_ip }}"
      with_items: ec2_instances.instances

    - name: Add all instance private IPs to host group
      add_host: hostname={{ item.private_dns_name }}
                groupname=natservers
                groups=natservers
                ansible_ssh_private_key_file=~/.ssh/wfm-devops-root.pem
                ansible_ssh_user=ec2-user
                #ansible_ssh_args=-o ControlPersist=15m -F ~/.ssh/config
                #ansible_ssh_args=-o ControlPersist=15m -F includes/ssh.config
      with_items: ec2_instances.tagged_instances

- hosts: natservers
  name: configuration play
  user: ec2-user
  gather_facts: true
  roles:
    - { role: auto-upgrades, tags: "auto-upgrades", sudo: yes }
    - { role: ansible-users, tags: "ansible-users", sudo: yes }
  vars:
    ansible_distribution: centos
    #ssh_args: -o ControlPersist=15m -F includes/ssh.config
    scp_if_ssh: True
    control_path: ~/.ssh/mux-%%r@%%h:%%p
    users:
    - name: service-tower21
      uid: 1010
      comment: service-tower21
      password: ''
      #is_admin: no
      groups:
        - sudo
    users_groups:
    - name: devops
      gid: 1500
    - name: sudo
      gid: 1503
    user_ssh_keys:
    - name: service-tower21
      keys:
    - ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAACAQD2TeTXeBvsMMydPKhat5hpG1w1/TdjttDoWt+hyy0m8N/DXyFBMiMUyObG8P27bZ74iZ6epgkDxyaMGIwfWzn5YXILy4QZT5ZYxaKH3O5RP4X/0fWCqElz5k6NmkzPYmlhn5h2kKnB6fENO4mXUJifPPrnkY/DY+OU6rOMmozsSE6M1YGsSW95KuvTU8/E78WYNemFZ/b/sn0ahw9a+dfAeHTaFPYcpHomUNNL65NIiGtnuH+YnQ6vHCk0vNQPx5my7BQnvZEowLjAhhHdhN63l6t8E1fgBSo1pWA/Vpd8LjHnsMd2kuGLRwc60AeWZ6KntJrCVnxDycSq7127/avP8dnFBasQMylTKVHnBk0OpPrg39IDP6W3hoCY9xU9aWpqDwpwJTOxPUq1fi5XGGb5K6sJ+b8Cb5L/NpB3b9bqhmojBz261K6aJd4yLduq3Q1W2uUD1+kM3Gn05A181HT91jvx4Ib9x0tCPDezsQvgTlMZdDupe7i2EHqJMmGCU7R3R6D0m/XJmFdspf1mGTdzvItPdn2Gzxla+ccZV95WKfHewECgRiN1et3ddrfgKo5lLxoWV/GGICNONBR1i5UfKNiuggN2MAo+fYaD/X2smDirx8JY4B9k6EXVqw8k7TddmQxNUbGooqKTTSgS+aHNbPLO5eqQJSvQ4CwWO5x29Q== devops@wholefoods.com
