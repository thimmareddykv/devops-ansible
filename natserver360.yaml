---
# file: devops-ansible/ec2-launch-instance.yaml

# Description:
#   Attempt to launch ec2 instances 
#   This file was borrowed from wfm-api team. Thanks.

# Preconditions:
#   export AWS_ACCESS_KEY_ID=
#   export AWS_SECRET_ACCESS_KEY=

# Examples:
#
#  TESTING
#    ansible-playbook natserver360.yaml -i hosts/natservers.ini --extra-vars "counter_tag=devops-nat-`date '+%Y%m%d'` server_name=devops:development:nat-tmp role=nat_server instance_count=1"
#    ansible-playbook natserver360.yaml -i hosts/natservers.ini --extra-vars "counter_tag=devops-nat-`date '+%Y%m%d'`-tmp1 server_name=devops:development:nat-tmp role=nat_server instance_count=1" -vvvv
#
# PRODUCTION
# nat-a
#    ansible-playbook natserver360.yaml -i hosts/natservers.ini --extra-vars "counter_tag=devops-nat-a server_name=devops:shared:nat-a role=nat_server instance_count=1 vpc_subnet_id=subnet-d47effff"
#
# nat-b
#    ansible-playbook natserver360.yaml -i hosts/natservers.ini --extra-vars "counter_tag=devops-nat-b server_name=devops:shared:nat-b role=nat_server instance_count=1 vpc_subnet_id=subnet-72ee9505"
#
# WARNINGS:
#   counter_tag is used to limit number of servers launched.
#   Make counter_tag unique per deployment if you're rotating servers in and out of a load balancer

#  pre_tasks:
#    - name: Check for variable node_environment
#      fail: msg="I think you did not read the preconditions, you are fully unqualified to be running this"
#      when: "'vpc_subnet_id' is not defined"

- name: Launch/configure app server instance
  hosts: 127.0.0.1
  connection: local
  gather_facts: false

  vars:
    ansible_distribution: CentOS
    instance_type: "t2.micro"   
    region: us-east-1
    server_name: devops:development:nat-tmp
    #role: null
    #role: ansible
    #image: ami-d0ba0cb8 # base ubuntu 14.04 : us-east-1, 64-bit, instance root store
    image: ami-184dc970 # Devops testing for natserver
    
    #sage_aws_group: devops-default-vpc
    aws_group: allow-bastion, network-nat
    #vpc_subnet_id: subnet-ced06eb9  # Testing Subnet
    #vpc_subnet_id: subnet-ac7cfd87  # VPC wfm-development vpc-587b533d
    vpc_subnet_id: subnet-d47effff # VPC devops-shared vpc-b37d55d6


#  pre_tasks:
#    - name: Check for variable node_environment
#      fail: msg="I think you did not read the preconditions, you are unqualified to be running this"
#      when: "'vpc_subnet_id' is not defined"

  tasks:
    - name: Launch server
      local_action:
        module: ec2
        vpc_subnet_id: "{{ vpc_subnet_id }}"
        assign_public_ip: yes
        key_name: wfm-devops-root
        #group: "{{ aws_group }}"
        group: ['allow-bastion', 'network-nat']
        instance_type: "{{ instance_type }}"
        image: "{{ image }}"
        region: "{{ region }}"
        wait: yes
        wait_timeout: 500
        exact_count: "{{ instance_count | default(1) }}"
        count_tag:
          counter_tag: "{{ counter_tag }}"
      register: ec2_instances

#    - include: includes/build-ec2-inventory.yaml

    - name: Tag instances
      local_action: ec2_tag
                    resource={{ item.id }}
                    region={{ region }}
                    state=present
      with_items: ec2_instances.tagged_instances
      args:
        tags:
          Name: "{{ server_name }}"
          counter_tag: "{{ counter_tag }}"
          #role: "{{ role }}"
          #owner: devops
          "wfm:team": devops
          "wfm:environment": shared

    - name: wait for instances to listen on port:22
      wait_for: state=started
                host={{ item.private_dns_name }}
                port=22
      with_items: ec2_instances.tagged_instances

    - name: Report instances to user
      #debug: msg="Instance {{ item.id }} with Public IP {{ item.public_ip }}"
      debug: msg="Instance {{ item.id }} with Private IP {{ item.private_ip }}"
      with_items: ec2_instances.instances

#    - name: Notify Hipchat
#      hipchat:
#        token={{ default_hipchat_token }}
#        room={{ default_hipchat_room }}
#        from={{ default_hipchat_from }}
#        msg="Ansible Created {{ counter_tag }} {{ instance_type }} Instance {{ item.id }} with public IP {{ item.public_ip }} serving subnet {{ vpc_subnet_id }}"
#        validate_certs=no
#      ignore_errors: yes   # DO NOT FAIL IF HIPCHAT IS DOWN
#      with_items: ec2_instances.instances

    #- name: Add all instance public IPs to host group
    - name: Add all instance private IPs to host group
      add_host: hostname={{ item.private_dns_name }}
                groupname=ec2hosts
                groups=ec2hosts
                ansible_ssh_private_key_file=~/.ssh/wfm-devops-root.pem
                ansible_ssh_user=ec2-user
      with_items: ec2_instances.tagged_instances

- hosts: ec2hosts
  name: configuration play
  user: ec2-user
  #user: ubuntu
  gather_facts: true
  tasks:

  roles:
    - { role: auto-updates, tags: "auto-updates", sudo: yes }
#    - { role: common, tags: "common", sudo: yes }
#    - { role: natserver, tags: "natserver", sudo: yes }
#    - { role: ansible-users, tags: "ansible-users", sudo: yes }
#    - { role: ansible-users2, tags: "ansible-users2", sudo: yes }
  vars:
    ansible_distribution: CentOS
    ssh_args: -o ControlPersist=15m -F ~/.ssh/config
    scp_if_ssh: True
    control_path: ~/.ssh/mux-%%r@%%h:%%p
